#!@perl@

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;

my ($dataDirectory, $dropDb, $createDb, $modelConfigFile);

&GetOptions ('modelConfigFile=s' => \$modelConfigFile,
	     'dropDatabase!' => \$dropDb,
	     'createDatabase!' => \$createDb,
	     'dataDirectory=s' => \$dataDirectory) or &usage;
&usage unless $modelConfigFile && $dataDirectory && ($dropDb || $createDb);

my $classpath = "$ENV{GUS_HOME}/lib/java/commons-digester-1.5.jar:$ENV{GUS_HOME}/lib/java/WDK-Model.jar:$ENV{GUS_HOME}/lib/java/commons-beanutils.jar:$ENV{GUS_HOME}/lib/java/commons-collections.jar:$ENV{GUS_HOME}/lib/java/commons-logging-api.jar:$ENV{GUS_HOME}/lib/java/oracle-classes12.jar:$ENV{GUS_HOME}/lib/java/commons-dbcp-1.1.jar:$ENV{GUS_HOME}/lib/java/commons-pool-1.1.jar:$ENV{GUS_HOME}/lib/java/commons-cli-1.0.jar";

my $args = "-configFile $modelConfigFile ";

if ($dropDb){
    $args .= "-dropDatabase ";
}
if ($createDb){
    $args .= "-createDatabase ";
}

opendir(DATADIR, "$dataDirectory") || die ("opendir failed when trying to open $dataDirectory");
my $nextTableName;
my @tables;
while ($nextTableName = readdir(DATADIR)){

    if ($nextTableName =~ /^[A-Za-z]+$/){
	
	push (@tables, $nextTableName);
    }
}

my $tableArg = "";

foreach my $tableName (@tables){
    $tableArg .= $dataDirectory . "/" . $tableName . " ";
}

$args .= "-tables $tableArg";

my $cmd = "java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver -DcmdName=wdkTestDb -classpath $classpath org.gusdb.wdk.model.test.TestDBManager $args";

#print STDERR "wdkTestDb: running command $cmd\n";

system($cmd);

############

sub usage {
    print "usage:\n  wdkTestDb\n \t-modelConfigFile (database configuration file to use with wdk model) \n\t-dataDirectory (directory in with WDKTest tables are located) \n\t<-dropDatabase|-createDatabase> (action to take with database; dropping when non-existent\n\t\or creating when already existing will do nothing; include both to reset datbase)";
    exit(1);
}
