#!@perl@

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;

my ($dropDb, $createDb, $modelConfigFile);

&GetOptions ('configFile=s' => \$modelConfigFile,
	     'dropDatabase!' => \$dropDb,
	     'createDatabase!' => \$createDb);

&usage unless $modelConfigFile && ($dropDb || $createDb);

my $classpath = "$ENV{GUS_HOME}/lib/java/commons-digester-1.5.jar:$ENV{GUS_HOME}/lib/java/WDK-Model.jar:$ENV{GUS_HOME}/lib/java/commons-beanutils.jar:$ENV{GUS_HOME}/lib/java/commons-collections.jar:$ENV{GUS_HOME}/lib/java/commons-logging-api.jar:$ENV{GUS_HOME}/lib/java/oracle-classes12.jar:$ENV{GUS_HOME}/lib/java/commons-dbcp-1.1.jar:$ENV{GUS_HOME}/lib/java/commons-pool-1.1.jar:$ENV{GUS_HOME}/lib/java/commons-cli-1.0.jar";

my $args = "-configFile $modelConfigFile ";

if ($dropDb){
    $args .= "-dropDatabase ";
}
if ($createDb){
    $args .= "-createDatabase ";
}

my $dataDirectory = "$ENV{GUS_HOME}/data/WDK/ToyModel/testTables/";

opendir(DATADIR, "$dataDirectory") || die ("opendir failed when trying to open $dataDirectory");
my $nextTableName;
my @tables;
while ($nextTableName = readdir(DATADIR)){

    if ($nextTableName =~ /^[A-Za-z]+$/){
	
	push (@tables, $nextTableName);
    }
}

my $tableArg = "";

foreach my $tableName (@tables){
    $tableArg .= $dataDirectory . "/" . $tableName . " ";
}

$args .= "-tables $tableArg";

my $cmd = "java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver -DcmdName=wdkTestDb -classpath $classpath org.gusdb.wdk.model.test.TestDBManager $args";

#print STDERR "wdkTestDb: running command $cmd\n";

system($cmd);

############

sub usage {
    print "\nusage:  parses flat files representing database tables and inserts them into the database. \n\nwdkTestDb\n \t-modelConfigFile (database configuration file to use with wdk model)\n\t<-dropDatabase|-createDatabase> (action to take with database; dropping when non-existent or creating when already existing will do nothing; include both to reset database)\n\n";
    exit(1);
}
