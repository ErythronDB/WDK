#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use GUS::ObjRelP::DbiDatabase;
use Getopt::Long;
use GUS::Common::GusConfig;


my ($taxonIds, $filePath);

&GetOptions("taxon_ids=s"=> \$taxonIds,
	    "file_path=s"=> \$filePath);

&usage() unless $taxonIds && $filePath;

print STDERR "generating files in $filePath for taxons $taxonIds\n";

my $gusconfig = GUS::Common::GusConfig->new();

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getReadOnlyDatabaseLogin(),
					$gusconfig->getReadOnlyDatabasePassword,
					1,0,1,
					$gusconfig->getCoreSchemaName);
my $dbh = $db->getQueryHandle();

&makeAssemblyFile();

#&makeTaxonNameFile();

#&makeAssemblySequenceFile();

#&makeExternalNaSeqFile();

#&makeEstFile();

#&makeLibraryFile();

print STDERR "all done!";

#Get information on all Assemblies for a specific organism
sub makeAssemblyFile{

    open (ASSEMBLY, ">>" . $filePath . "/WDKTestAssembly") || die "could not open Assembly file";
    
    print ASSEMBLY "na_sequence_id number(10) not null,\ttaxon_id number(12),\tfull_length_cds number(3),\tassembly_consistency number(10),\tcontains_mrna number(1),\tnumber_of_contained_sequences number(12),\tsequence clob\n";
    
    my $assemSql = "select na_sequence_id, taxon_id, full_length_cds, assembly_consistency, contains_mrna, number_of_contained_sequences, sequence
                from dots.assembly
                where taxon_id in ($taxonIds)";
    
    my $sth = $dbh->prepareAndExecute($assemSql);
    while (my ($assemId, $taxonId, $fullLength, $assemConsistency, $containsMrna, $numberOfSeqs, $sequence) = $sth->fetchrow_array()){
	print ASSEMBLY "$assemId\t$taxonId\t$fullLength\t$assemConsistency\t$containsMrna\t$numberOfSeqs\t$sequence\n";
    }
}

#Get TaxonName information for the provided taxon id
sub makeTaxonNameFile{
    open (TAXONNAME, ">>" . $filePath . "/WDKTestTaxonName") || die "could not open TaxonName file";
    
    print TAXONNAME "taxon_name_id number(10) not null,\ttaxon_id number(10) not null,\tname varchar(255) not null\n";

    my $taxonNameSql = "select tn.taxon_name_id, tn.taxon_id, tn.name
                    from sres.taxonname tn
                    where tn.taxon_id in ($taxonIds)";
    
    my $sth = $dbh->prepareAndExecute($taxonNameSql);
    
    while (my ($taxonNameId, $taxonId, $name) = $sth->fetchrow_array()){
	print TAXONNAME "$taxonNameId\t$taxonId\t$name\n";
    }
}

sub makeAssemblySequenceFile{

    open(ASSEMSEQ, ">>" . $filePath . "/WDKTestAssemblySequence") || die "could not open Assembly Sequence file";

    print ASSEMSEQ "assembly_sequence_id number(10) not null,\tassembly_na_sequence_id number(10),\tna_sequence_id number(10) not null,\tsequence_start number(12) not null,\tsequence_end number(12) not null,\tquality_start number(12),\tquality_end number(12),\thave_processed number(1) not null\n";

    my $assemSeqSql = "select distinct seq.assembly_sequence_id, seq.assembly_na_sequence_id, seq.na_sequence_id, seq.sequence_start, 
                       seq.sequence_end, seq.quality_start, seq.quality_end, seq.have_processed
                       from dots.Assembly assem, dots.AssemblySequence seq
                       where seq.assembly_na_sequence_id = assem.na_sequence_id and assem.taxon_id in ($taxonIds)";

    my $sth = $dbh->prepareAndExecute($assemSeqSql);

    while (my ($assemSeqId, $assemId, $naSeqId, $seqStart, $seqEnd, $qualStart, $qualEnd, $haveProcessed) = $sth->fetchrow_array()){
	print ASSEMSEQ "$assemSeqId\t$assemId\t$naSeqId\t$seqStart\t$seqEnd\t$qualStart\t$qualEnd\t$haveProcessed\n";
    }

}    


sub makeExternalNaSeqFile{
    
    open(EXTNASEQ, ">>" . $filePath . "/WDKTestExternalNaSequence") || die "could not open External NASequence file";

    print EXTNASEQ "na_sequence_id number(10) not null,\texternal_database_release_id number(5),\tsource_id varchar(255),\tsecondary_identifier varchar(255),\tname varchar(255),\tlength number(12)\n";

    my $extNaSeqSql = "select distinct ena.na_sequence_id, ena.external_database_release_id, ena.source_id, ena.secondary_identifier, ena.name, ena.length
                       from dots.ExternalNASequence ena, dots.Assembly assem, dots.AssemblySequence seq
                       where seq.assembly_na_sequence_id = assem.na_sequence_id and assem.taxon_id in ($taxonIds)
                       and seq.na_sequence_id = ena.na_sequence_id";

    my $sth = $dbh->prepareAndExecute($extNaSeqSql);

    while (my ($naSeqId, $dbRelease, $sourceId, $secId, $name, $length) = $sth->fetchrow_array()){
	print EXTNASEQ "$naSeqId\t$dbRelease\t$sourceId\t$secId\t$name\t$length\n";
    }
}

sub makeEstFile{

    open (EST, ">>" . $filePath . "/WDKTestEST") || die "could not open EST file";

    print EST "est_id number(10) not null,\tna_sequence_id number(10) not null,\tclone_id number(10),\tlibrary_id number(5) not null,\tdbest_id_est number(12),\taccession varchar(20),\tquality_start number(12) not null,\tquality_stop number(12),\tseq_length number(12)\n";

    my $estSql = "     select distinct est.est_id, est.na_sequence_id, est.clone_id, est.library_id, est.dbest_id_est, est.accession, est.quality_start, est.quality_stop, est.seq_length
                       from dots.est est, dots.ExternalNASequence ena, dots.Assembly assem, dots.AssemblySequence seq
                       where seq.assembly_na_sequence_id = assem.na_sequence_id and assem.taxon_id in ($taxonIds)
                       and seq.na_sequence_id = ena.na_sequence_id and est.accession = ena.source_id";

    my $sth = $dbh->prepareAndExecute($estSql);
    
    while (my ($estid, $naSeqId, $cloneId, $libraryId, $dbestId, $accession, $qualStart, $qualStop, $length) = $sth->fetchrow_array()){
	print EST "$estid\t$naSeqId\t$cloneId\t$libraryId\t$dbestId\t$accession\t$qualStart\t$qualStop\t$length\n";
    }

}
                    
sub makeLibraryFile{

    open (LIBRARY, ">>" . $filePath . "/WDKTestLibrary") || die "could not open library file";

    print LIBRARY "library_id number(5) not null,\tanatomy_id number(4),\tdbest_id number(12),\tdbest_name varchar(120),\tnormalized varchar(1)\n";

    my $libSql = "    select distinct l.library_id, l.anatomy_id, l.dbest_id, l.dbest_name, l.normalized          
                      from dots.est est, dots.ExternalNASequence ena, dots.Assembly assem, dots.AssemblySequence seq, dots.library l
                      where seq.assembly_na_sequence_id = assem.na_sequence_id and assem.taxon_id in ($taxonIds)
                      and seq.na_sequence_id = ena.na_sequence_id and est.accession = ena.source_id and est.library_id = l.library_id";

    my $sth = $dbh->prepareAndExecute($libSql);

    while (my ($libraryid, $anatomyId, $dbestId, $dbestName, $normalized) = $sth->fetchrow_array()){
	print LIBRARY "$libraryid\t$anatomyId\t$dbestId\t$dbestName\t$normalized\n";
    }
    print STDERR "done with library file\n";
}

sub usage{

    print STDERR "usage: makeTablesAsFiles --taxon_ids (comma separated list of taxon ids for organism to generate data) --file_path (directory for files to be output)\n";
    die;

}
