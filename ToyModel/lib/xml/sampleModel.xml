<?xml version="1.0"?>
 
<wdkModel name="RNARecords"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <recordListSet name="RNARecordLists">

     <recordList name="RNARecordList"
               recordRef="RNARecords.RNARecord"
               queryRef="RNARecordQueries.RNAIdsByGoId" />
  </recordListSet>

  <recordSet name="RNARecords">
     <record name="RNARecord" type="DoTS Transcript" idPrefix="DT.">

       <fieldsQuery referent="RNASimpleQueries.RNAListInDetail"/>  
   
       <fieldsQuery referent="RNARecordQueries.RNAFields"/>
             
       <tableQuery referent="RNARecordQueries.ExternalLinks"/>
       
       <textField name="overview">
         <text>
       This is DoTS Transcript DT.$$primaryKey$$.  It is has a length of $$length$$.
         </text>
       </textField>

     
     </record>

  </recordSet>

  <queryNameList name="RNAQueryNameList">

     <fullQueryName fullQueryName="RNASimpleQueries.RNAByGoTerm"/>

     <fullQueryName fullQueryName="RNASimpleQueries.TaxonName"/>

  </queryNameList>


  <querySet name="RNARecordQueries">

     <query name="RNAIdsByGoId" 
            xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery">

        <param name="GoId"
               xsi:type="org.gusdb.gus.wdk.model.StringParam"
               prompt="GO ID"
               sample="GO:0016597"
               regex="\S+"/>
       
        <column name="na_sequence_id" displayName="Assembly ID" />     

        <sql>
        select distinct a.na_sequence_id
        from dots.Assembly a, dots.Protein P,
             dots.GOAssociation ga, sres.GoTerm gt,
             dots.RNAInstance rnai, dots.RNAFeature rnaf
        where rnai.rna_id = p.rna_id
          and rnai.na_feature_id = rnaf.na_feature_id
          and rnaf.na_sequence_id = a.na_sequence_id
          and p.protein_id = ga.row_id
          and ga.table_id = 180
          and ga.go_term_id = gt.go_term_id
          and gt.go_id = '$$GoId$$'
          and gt.external_database_release_id = 7798
          and ga.is_deprecated = 0
         </sql>
     </query>

     <query name="RNAFields" 
            xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery">

       <param name="primaryKey" 
              xsi:type="org.gusdb.gus.wdk.model.StringParam"/>

       <column name="description" displayName="Description" />
       <column name="length" displayName="Length" />
       <column name="assembly_consistency" displayName="Assembly consistency" />
       <column name="contains_mrna" displayName="Contains mRNA" />
       <column name="number_of_contained_sequences" displayName="Number contained sequences" />
       <column name="modification_date" displayName="Last modified" />
       <column name="review_status_name" displayName="Review status" />
       <column name="hello" 
               xsi:type="org.gusdb.gus.wdk.model.TextColumn"
               displayName="Last modified" 
               text="hello $$taxon_name$$, you are nice" />
 
       <sql>
       select r.description, 
              a.length, 
              a.assembly_consistency, 
              a.contains_mrna,
              a.number_of_contained_sequences, 
              TO_CHAR(a.modification_date, 'Mon DD, YYYY HH:MI:SSAM') as modification_date, 
              rvw.name as review_status_name
      from dots.Assembly a, sres.TaxonName tn, 
           dots.RNAFeature rf, dots.RNAInstance rs, 
           dots.RNA r, sres.ReviewStatus rvw 
      where a.na_sequence_id = $$primaryKey$$ 
        and r.review_status_id = rvw.review_status_id 
        and rf.na_sequence_id = a.na_sequence_id 
        and rf.na_feature_id = rs.na_feature_id 
        and rs.rna_id = r.rna_id 
        and a.taxon_id = tn.taxon_id 
        and tn.name_class = 'scientific name'
       </sql>
    </query>

    <query name="ExternalLinks" 
           xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery">

      <param name="primaryKey" 
             xsi:type="org.gusdb.gus.wdk.model.StringParam"/>

      <column name="name" displayName="Database" />
      <column name="primary_identifier" displayName="Id" />
      <column name="secondary_identifier" displayName="Locus name" />
      <column name="chromosome" displayName="Chromosome" />
      <column name="centimorgans" displayName="cM" />
      <column name="external_database_release_id" />

      <sql>
      select ed.name,  dbr.primary_identifier, dbr.secondary_identifier, 
             dbr.chromosome, dbr.centimorgans,dbr.external_database_release_id 
      from dots.DBRefNASequence dbrn, sres.DBRef dbr, sres.ExternalDatabase ed,
           sres.ExternalDatabaseRelease edr 
       where dbrn.na_sequence_id = $$primaryKey$$ 
         and dbrn.db_ref_id = dbr.db_ref_id 
         and dbr.external_database_release_id = edr.external_database_release_id 
         and edr.external_database_id = ed.external_database_id
      </sql>
    </query>

  </querySet>

  <querySet name="RNASimpleQueries">

     <query name="DTGeneCardName"
            xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery"
            displayName="Gene Card name">

       <param
       xsi:type="org.gusdb.gus.wdk.model.StringParam"
       name="GeneName"
       prompt="Gene Name"
       sample="brca1"/>

       <column name="na_sequence_id" />

       <sql>
       select distinct dbrn.na_sequence_id
       from sres.DBRef dbr, dots.DBRefNASequence dbrn 
       where dbr.lowercase_primary_identifier = '$$GeneName$$'
       and dbr.external_database_release_id = 4892
       and dbr.db_ref_id = dbrn.db_ref_id
       </sql>
    </query>

    <query name="RNAListInDetail"
              xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery"
              displayName="RNAs">

      <param  
        xsi:type="org.gusdb.gus.wdk.model.StringParam"
        name="resultTable"/>
      <param  
        xsi:type="org.gusdb.gus.wdk.model.StringParam"
        name="startRow"/>
      <param  
        xsi:type="org.gusdb.gus.wdk.model.StringParam"
        name="endRow"/>

      <column name="gene_id"/>
      <column name="taxon_name"/>
      <column name="gene_symbol"/>
      <column name="gene_description"/>
      <column name="na_sequence_id"/>
      <column name="assembly_length"/> 
      <column name="assembly_num_sequences"/>
      <column name="assembly_contains_mrna"/>

      <sql>
        <!-- use CDATA because query includes angle brackets -->
        <![CDATA[
      select cd.gene_id, cd.taxon_name, cd.gene_symbol, 
             cd.gene_description, cd.na_sequence_id, cd.assembly_length, 
             cd.assembly_num_sequences, 
              cd.assembly_contains_mrna 
      from allgenes.CentralDogma cd
      where cd.na_sequence_id = $$primaryKey$$

      ]]>
      </sql>
    </query>

    <query name="RNAByGoTerm"
           xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery"
           displayName="GO functional classification (by term)">

         <param 
          xsi:type="org.gusdb.gus.wdk.model.StringParam"
          name="GoId"
          prompt="GO Id"
          help="You know what it is"
          sample="GO:0005013"
          regex="GO:\d+"/>

         <param
          xsi:type="org.gusdb.gus.wdk.model.SqlEnumParam"
          name="Taxon"
          prompt="Organism"
          help="You know what it is"
          multipick="yes">
            <query name="dontcare"
                   xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery">
              <column name="name"/>
              <sql>
              select name as key,
                     taxon_id as value
              from SRes.taxonName
              where name in ('mouse', 'human')
              </sql>
            </query>
         </param> 

      <column name="na_sequence_id"/>

      <sql>
      select distinct cd.na_sequence_id 
        from dots.GOAssociation ga, sres.goTerm gt, allgenes.CentralDogma cd 
        where gt.go_id = '$$GoId$$'
        and ga.go_term_id = gt.go_term_id
        and ga.table_id = 180 
        and ga.row_id = cd.protein_id 
        and cd.taxon_id = $$Taxon$$ 
        and ga.is_deprecated != 1 
        and ga.is_not != 1 
      </sql>

    </query>


     <query name="TaxonName"
            xsi:type="org.gusdb.gus.wdk.model.implementation.SqlQuery"
            displayName="Taxon name">

       <param
       xsi:type="org.gusdb.gus.wdk.model.StringParam"
       name="TaxonId"
       prompt="Taxon Id"
       sample="8"
       regex="\d+"/>
      
       <column name="name"/>

       <sql>
       select name
       from SRes.TaxonName 
       where taxon_id = $$TaxonId$$
       </sql>
    </query>

  </querySet>
</wdkModel>

