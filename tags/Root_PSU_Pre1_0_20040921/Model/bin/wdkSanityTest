#!/usr/bin/perl

$GUS_HOME=$ENV{GUS_HOME};
$CLASSPATH="$GUS_HOME/lib/java/commons-digester-1.5.jar:$GUS_HOME/lib/java/WDK-Model.jar:$GUS_HOME/lib/java/commons-beanutils.jar:$GUS_HOME/lib/java/commons-collections.jar:$GUS_HOME/lib/java/commons-logging-api.jar:$GUS_HOME/lib/java/xercesImpl.jar:$GUS_HOME/lib/java/oracle-classes12.jar:$GUS_HOME/lib/java/commons-dbcp-1.1.jar:$GUS_HOME/lib/java/commons-pool-1.1.jar:$GUS_HOME/lib/java/commons-cli-1.0.jar:$GUS_HOME/lib/java/jing-20030619.jar";

my $args = "";
foreach my $arg (@ARGV) {
    $args .= ($arg =~ /\-/ ? " $arg" : " \"$arg\"");
}

my $cmd = "java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver -DcmdName=wdkSanityTest -DschemaFile=$GUS_HOME/lib/rng/wdkModel.rng -DsanitySchemaFile=$GUS_HOME/lib/rng/sanityModel.rng -classpath $CLASSPATH org.gusdb.wdk.model.test.SanityTester $args";

system($cmd);


#rng (done)
#take out name (done)
#less wordy results--done 
#if fails, say why (exception or outside range) dump out command line to test with (done)
#non-zero status and give summary (xx passed, xx failed, use capital letters) (done)
#refactor printqueryFailureMessage, printRecordFailureMessage, maybe record/queryValidationTest (done except for validation test)
#make it say 'query failed' if one query failed (done)
#get absolute path for files when printing out commands (done)
#banner failures(done)
