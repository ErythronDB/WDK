#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";
use strict;

my ($serverURL) = @ARGV;
$serverURL = "http://localhost:8090/axis/WdkProcessService" unless $serverURL;
my $tmpDir = "wdkWSMakeStubTmp";

my $GUS_HOME = $ENV{GUS_HOME};

# enumerate jar files one by one to avoid class version conflicts
#
my $libDir="$GUS_HOME/lib/java";
my $cp="";
$cp="${cp}:$libDir/axis.jar:$libDir/saaj.jar:$libDir/jaxrpc.jar:$libDir/wsdl4j-1.5.1.jar";
$cp="${cp}:$libDir/commons-discovery-0.2.jar:$libDir/commons-logging-api.jar";
$cp="${cp}:$libDir/WDK-Service.jar";
# print "\nCLASSPATH: " . join("\n", split(/:/, $cp)) . "\n\n";

my $cmd;
my $cfg = "$GUS_HOME/config/WEB-INF/wdkService-config.xml";
my $rmCfg = 0;
if (! -f $cfg) {
  $cmd="cp -f $GUS_HOME/config/WEB-INF/wdkService-config.xml.sample $cfg";
  system("$cmd"); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;
  $rmCfg = 1;
}

if (-d $tmpDir) {
  system("rm -rf $tmpDir/*; mkdir $tmpDir/classes");
} else {
  system("mkdir -p $tmpDir/classes");
}

# stage 1
#
print "generating webservice description from java ... \n";
$cmd = "java -Dwebservice.home=$GUS_HOME/config -cp $cp org.apache.axis.wsdl.Java2WSDL " .
  "-o $tmpDir/wdkProcessService.wsdl -l\"$serverURL/WdkProcessService\" " .
  "-n service.wdk.gusdb.org -p\"org.gusdb.wdk.service\" \"urn:service.wdk.gusdb.org\" " .
  "org.gusdb.wdk.service.WdkProcessService";
system($cmd); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;

# stage 2
#
print("generating webservice client code and deployment descriptor ...\n");
$cmd = "java -cp $cp org.apache.axis.wsdl.WSDL2Java " .
  "-o $tmpDir -d Session -c org.gusdb.wdk.service.WdkProcessServiceImp " .
  "-s $tmpDir/wdkProcessService.wsdl";
system($cmd); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;

system("rm -f $tmpDir/org/gusdb/wdk/service/WdkProcessServiceImp.java");

# compiling stub code separately from WDK/Model code causes mysterious IncompatibleClassChangeError,
# generate stub source code in WDK/Model/src/java instead for single compile of client code
#
# $cmd="javac -cp $cp -d $tmpDir/classes $tmpDir/org/gusdb/wdk/service/*.java";
# system($cmd); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;
#
# my $pwd = `pwd`; chomp $pwd;
# chdir "$tmpDir/classes";
# $cmd="jar -cf WDK-ServiceStub.jar org";
# system($cmd); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;
# chdir $pwd;
# system("cp $tmpDir/classes/WDK-ServiceStub.jar $GUS_HOME/lib/java/");
my $srcDir = "$ENV{PROJECT_HOME}/WDK/Model/src/java/org/gusdb/wdk/service";
if (! -d $srcDir) { system("mkdir $srcDir"); }
$cmd = "cp $tmpDir/org/gusdb/wdk/service/*.java $srcDir; "
     . "touch $GUS_HOME/lib/java/WDK-ServiceStub.jar.made; rm $GUS_HOME/lib/java/WDK-Service.jar";
system($cmd); die ("ERROR: $!\nfailed running $cmd\n\n") if $?;

system("rm -rf $tmpDir");
system("rm $cfg") if $rmCfg;
