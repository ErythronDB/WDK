Version 1.1

General
  * the WDKToySite has been separated into its own project.  The components
    WDK/ToyModel and WDK/ToySite are now in WDKToySite/Model and
    WDKToySite/Site respectively.  The Wiki documentation explains how to
    use the WDKToySite project as a template to create a new WDK-based
    project, build it and store it in CVS.

Model - Fixed Bugs

  * connection pool leak

  * in the model XML file, <sqlQuery> now supports an isCachable= attribute
    as documented


Model - Features

  * in the model XML file, <question> now has a required displayName= 
    attribute, a required <description> element and an optional <help>
    element

  * in the model XML file, <linkColumn> and <linkAttribute> have been
    introduced so that records and tables can include hyper-links.

  * in the model XML file, <textAttribute> and <column> now have an 
    isInternal="true" attribute.  If set the view should not show the
    value.

  * code: a wide ranging refactoring and cleaning of the internals to improve
    the clarity of the code and API

  * code: introduction of the org.gusdb.wdk.model.jspwrap package to provide 
    a concise API for a JSP based controller and view.

  * BooleanQuestions

  * new wdkBooleanQuestion command to exercise BooleanQuestions

  * the model configuration files now must conform to a pattern.  They must
    be found in $GUS_HOME/config.  And their name must be based on a
    model name prefix.  The prefix can be whatever you decide.  Here is 
    the pattern:
         $GUS_HOME/config/model_name_prefix.xml          (the Model XML file)
         $GUS_HOME/config/model_name_prefix.prop         (the property file)
         $GUS_HOME/config/model_name_prefix-config.xml   (the config file)
         $GUS_HOME/config/ model_name_prefix-sanity.xml  (the sanity test file)

  * the command line tools (wdkXml, wdkQuery, wdkSummary, wdkRecord and
    wdkSanityTest) have had their command line arguments significantly
    simplified (by taking advantage of the config files pattern)


Controller - Features
 
  * the controller has been rewritten and is now based on Struts
 
  * it uses the jspwrap package for access to the model

  * error handling has been improved


View - Features

  * the view has been rewritten and is now implemented entirely in four
    .jsp files.

  * the view may include hyperlinks as specified in the model XML file

  * question page: parameter help is now displayed

  * summary page: parameter values are now displayed

  * a number of minor aesthetic improvements

  * boolean questions

