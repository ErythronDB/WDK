

WDK Version 1.5


Model - Fixed Bugs

   * 22, SQL query replacement code couldn't handle keywords (e.g. "select", "where") of 
     different cases. Now a case insensitive seach is in place.

   * 56, naive parsing of attribute query SQL to join with id query result
     cache table might result in non-functional SQL in many non-trivial cases.
     Implemented quick fix for simple cases, more robust solution proposed
     in tracker item 57.

   * Made the SQL query replacement code to support UNION queries, as well as INTERSECT and EXCEPT


Model - Features

   * add -showQuery option to wdkQuery and wdkSummary command to print out the SQL

   * Provide support for federated primary key. Now the primary key can be a combination of project_id and
     local_primary_key, where project_id is a unique name-id pair that identifies the GUS instance involved
     in the federated system, and local_primary_key is the current key used to identify the piece of
     information, such as locus_tag, source_id, etc.

   * Provide backward compatibility to the current non-federation models; that is, the federated key is
     totally options.


Controller - Fixed Bugs


Controller - Features

   * Provide support for federated primary key.


View - Fixed Bugs
   * 76, record page showing Federation specific headings such as Project ID

View - Features

   * Provide support for federated primary key.

   * Allow questionSets to be displayed either as a flattened list of quesitons
     (cp index.jsp.flat to index.jsp) or as drop down lists, each of which
     representing a questionSet (cp index.jsp.sets to index.jsp).

   * Added custom page hooks (under customPages/) so that you do not need to
     modify default view files in order to customize your site:
     I) site wide customizations:
        questionSets.jsp      --  customQuestionSets.jsp
        question.jsp          --  customQuestion.jsp
        questionSetsFlat.jsp  --  customQuestionSetsFlat.jsp
        summary.jsp           --  customSummary.jsp
        record.jsp            --  customRecord.jsp
     II) record-type specific customizations:
        question.jsp          --  <RecordClassSet>.<RecordClass>.question.jsp
        summary.jsp           --  <RecordClassSet>.<RecordClass>.summary.jsp
        record.jsp            --  <RecordClassSet>.<RecordClass>.jsp
     III) question-name specific customizations:
        question.jsp          --  <QuestionSet>.<Question>.jsp
        summary.jsp           --  <QuestionSet>.<Question>.summary.jsp
     Note: 1) there is no .question in <QuestionSet>.<Question>.jsp
           2) there is no .record in <RecordClassSet>.<RecordClass>.jsp
           3) more specific customization take precedence when more than one
              levels of customization exist for the same default view. 
