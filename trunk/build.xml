<project name="WDK temp build" default="package" basedir=".">

  <property name="build.home"    value="${basedir}/ant-build"/>
  <property name="src.home"      value="${basedir}/src/java"/>
  <property name="jar_resources.home"      value="${basedir}/webinf"/>
	
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>



  <path id="compile.classpath">

    <!-- <pathelement location="${catalina.home}/common/classes"/> -->
    <fileset dir="${basedir}/lib/java">
      <include name="*.jar"/>
    </fileset>

  </path>


<!--  <target name="all" depends="clean,compile"
   description="BROKEN Clean build and dist directories, then compile"/> -->


  <target name="clean"
   description="BROKEN Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>


  <target name="compile" depends="prepare"
   description="Compile Java sources">

    <!-- Compile Java classes as necessary -->
    <mkdir dir="${build.home}/classes"/>
    <javac srcdir="${src.home}"
          destdir="${build.home}/classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac>

    <!-- Copy application resources -->
    <copy  todir="${build.home}/classes">
      <fileset dir="${jar_resources.home}" />
    </copy>

  </target>



  <target name="package" depends="compile"
   description="Create JAR file">

    <!-- Create application JAR file -->
    <jar jarfile="${build.home}/GUS-WebDevKit.jar"
         basedir="${build.home}/classes/"/>

    <!-- Copy additional files to ${dist.home} as necessary -->

  </target>


  <target name="javadoc" depends="compile"
   description="Create Javadoc API documentation">

    <mkdir dir="${build.home}/docs/api"/>
    <javadoc sourcepath="${src.home}"
                destdir="${build.home}/docs/api"
           packagenames="*">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>


  <target name="javadoc-pdf" depends="compile"
   description="Create Javadoc PDF API documentation">

    <mkdir dir="${build.home}/docs/api"/>

    <javadoc sourcepath="${src.home}"
	access="private"
	packagenames="*">
   <doclet name="com.aurigalogic.doclet.core.Doclet"
              path="./lib/java/AurigaDoclet.jar">
        <param name="-out" value="api.pdf" />
        <param name="-format" value="pdf" />
      </doclet>
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>

  <target name="prepare">

    <!-- Create build directories as needed -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/WEB-INF"/>
    <mkdir  dir="${build.home}/WEB-INF/classes"/>


    <!-- Copy static content of this web application -->
<!--
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>
-->
    <!-- Copy external dependencies as required -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
    <mkdir  dir="${build.home}/WEB-INF/lib"/>
<!--
    <copy todir="${build.home}/WEB-INF/lib" file="${foo.jar}"/>
-->

    <!-- Copy static files from external dependencies as needed -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

  </target>


</project>
