#!/bin/csh

if ($#argv < 1 || $#argv > 2) then
  echo
  echo "usage: wdkCleanbuild cleanroom_dir_full_path [gus_config_file]"
  echo
  echo "Create a clean build by making a clean PROJECT_HOME directly from CVS and making a fresh GUS_HOME.  Uses cleanroom_dir as the target.  (Please initialize it by creating the cleanroom dir and placing an install dir there, copied from your PROJECT_HOME).   gus_config_file is optional.  The default is $GUS_CONFIG_FILE  "
  echo
  exit(-1)
endif

setenv CLEANROOM $1

if ($#argv == 2) then
  setenv GUS_CONFIG_FILE $2
endif

setenv GUS_HOME $CLEANROOM/gushome
setenv PROJECT_HOME $CLEANROOM/projects

if (! -d $PROJECT_HOME/install) then
  echo "cleanroom PROJECT_HOME "$PROJECT_HOME" does not exist.  Please create it and put an install dir there (copy it from your regular PROJECT_HOME)"
  exit(-1)
endif

echo
echo Running WDK clean build
echo
echo GUS_HOME: $GUS_HOME
echo PROJECT_HOME: $PROJECT_HOME
echo GUS_CONFIG_FILE: $GUS_CONFIG_FILE
echo

if (-d "$PROJECT_HOME/GUS") then
  echo removing $PROJECT_HOME/GUS
  rm -r $PROJECT_HOME/GUS
endif

if (-d $GUS_HOME) then
  echo removing "$GUS_HOME/*"
  echo
  rm -r $GUS_HOME/*
else
  echo making $GUS_HOME
  echo
  mkdir $GUS_HOME
endif

cd $PROJECT_HOME

if ($status != 0) then
  echo could not 'cd $PROJECT_HOME'
  exit(-1)
endif

cvs -d :ext:cvs.sanger.ac.uk:/cvsroot/GUS co GUS

if ($status != 0) then
  echo could not cvs checkout 
  exit(-1)
endif

mkdir $GUS_HOME/config
cp $PROJECT_HOME/install/config/install.prop.sample $GUS_HOME/config/install.prop
build GUS/WebDevKit install -append -returnErrStatus
  
exit $?
  

