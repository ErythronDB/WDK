To Do

For release 1.0

Steve

 - documentation

 - wdk home page

 - web install for view? 

 - move to new CVS structure

 - replace CV with Vocab
 

Dave

 - make test suite
   - create test database
      - decide what tables we want (based on the queries that ApiDots offers)
      - figure out how to extract an organism's data for those table to file
      - (lose overhead rows, and possibly simplify the schema)
      - create new command: wdkTestDb
          - has option to create and to delete
          - obviously reads files.
   - create wdkTest command which:
       - optionally calls wdkTestDb to create and destroy the db
       - simply runs a bunch of wdkCache, wdkXml, wdkQuery, wdkSummary, etc commands
       - this could be in a simple shell or perl script.  each command we call could be commented with what we think it is testing.
       - has two modes:
           - create expected answer
           - compate against previously saved expected answer
       - captures output of them all, and that output better match the expected, which we have previously saved.
       - tests are added modularly.  a give test can be flagged as "show stopper"
   - create model xml that is compatible and exercises our code
   - 

 - move to RNG from XML Schema
    - get our hands on all adrian did
    - upgrade it for the current schema
    - get it working again

 - try to get an RNG (RELAX NG) editor working (xmloperator or the emacs plugin)

 - wdkSummary output





NEW
 - derived column: must check that referenced columns exist

 - factor the various Tester classes.

 - factor the various Set classes?

 - update tutorial (include wdkCache)

 - document that the queries may be in a "create table as" context

 - wdkQuery: 
       - if -querySet or -query omitted, list the available query sets and queries
       - if -queryLists, show all queryLists
       - offer a -sqlDebug mode which shows all sql

 - how do we define complex parameter value constraints in the XML?   There are these
   types of constraints:
     - simple (eg regex, min, max) which are easy in XML
     - logic (require a programming language, eg, length must be even number
     - cross-param constraints (eg, width < length)

 - model should have all queries check their derived columns (to make sure that they are interpolating valid column names)


SORTED AND PRIORITIZED

General

 - logging

 - use webinstall for WDKTestSite

 - Javadocs (generated by build system)
 
 - importing model xml files into each other


UserQueries

 - boolean queries

 - also... handle CVs in different forms (list, tree, graph)

 - handle re-usable params from a separate file (importing params)

 - flat file queries

 - process queries



Records

 - implement specialDataTypes

 - column names must be lower case.  throw exception if not


DONE

 - improve the output of wdkXml (use indenting)

 - configuration with .prop file

 - param references 

 - abstract SqlEnumParam into ControlledVocabParam

 - use connection pool

 - complete implementation of SqlEnumParam (uses DB connection)

 - implement simple questionViewer

 - cache results

 - records: figure out basic architecture:  generic v. generated beans

 - virtual query sets (sets of queries already defined elsewhere)

 - abstract ResultSet into TableResult

 - associate additional info with query result columns, such as URLs, help

 - define page queries as a set of modular queries (a la report maker).  and, instead of returning result set, return abstract result with accessor methods that trigger the queries.

 - For table results, use declared columns to provide default heading names

 - error handling during parse of model xml file

 - DTD/XmlSchema for WdkXml?

